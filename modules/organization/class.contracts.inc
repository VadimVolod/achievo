<?php

userelation("atkmanytoonerelation");
userelation("atkonetomanyrelation");
useattrib("atklistattribute");
useattrib("atkdateattribute");
useattrib("atktextattribute");
useattrib("atknumberattribute");
useattrib("atkdummyattribute");
useattrib("atkboolattribute");

//Hack
//The is some bug in class.contracts.inc. No time to fix that now.
//Use project.project instead.
class projectRelation extends atkOneToManyRelation 
{
	function _addAddLink($myrecords, $record,$saveform=true)
	{
		$dest = $this->m_destination;
		$this->m_destination = "project.project";
		$url = parent::_addAddLink($myrecords, $record, $saveform);
		$this->m_destination = $dest;
		return $url;
	}
}

class contracts extends atkNode
{
  var $m_archive;

  function contracts()
  {
    $this->atkNode("contracts",NF_ADD_LINK | NF_EDITAFTERADD);

    $this->add(new atkAttribute("id",AF_AUTOKEY));
    $this->add(new atkAttribute("contractnumber",AF_SEARCHABLE, 20));
    $this->add(new atkManyToOneRelation("contracttype","organization.contracttype",AF_SEARCHABLE|AF_OBLIGATORY|AF_RELATION_AUTOLINK));
    $this->add(new atkManyToOneRelation("customer","organization.organization",AF_SEARCHABLE|AF_OBLIGATORY|AF_RELATION_AUTOLINK));
    
    $attr = new atkListAttribute("billing_type", array("by_period","on_delivery"), array("period","delivery"),AF_LIST_NO_NULL_ITEM | AF_HIDE_LIST);    
//    $type 	= "document.getElementById('billing_type')";
//    $ar_period = "document.getElementById('ar_billing_period')";
//    $period = "document.getElementById('billing_period')";
//    $attr->addOnChangeHandler("$ar_period.style.visibility=($type.options[$type.selectedIndex].value == 'period' ? 'visible' : 'hidden'); $period.selectedIndex = ($ar_period.style.visibility=='hidden') ? 0 : $period.selectedIndex;");
    $this->add($attr);
    
    $this->add(new atkListAttribute("billing_period",array("monthly","quarterly","yearly", "per_incident"),"",AF_OBLIGATORY|AF_HIDE_LIST|AF_LIST_NO_NULL_ITEM));
    $this->add(new atkNumberAttribute("period_price",AF_OBLIGATORY|AF_HIDE_LIST, 13, 5));
    $this->add(new atkDateAttribute("startdate","F d Y","d F Y", 0, 0, AF_OBLIGATORY|AF_HIDE_LIST));
    $this->add(new atkDateAttribute("enddate","F d Y","d F Y", 0, 0, AF_OBLIGATORY));
    $this->add(new atkListAttribute("aftercalculation", array("no","yes"), array(0,1),AF_HIDE_LIST | AF_LIST_NO_NULL_ITEM));
    $this->add(new atkNumberAttribute("priceperhour",AF_HIDE_LIST,10,2));
    $this->add(new atkListAttribute("status", array("active", "archived"), "", AF_OBLIGATORY|AF_HIDE_LIST));
    $this->add(new atkTextAttribute("description", TEXT_SMALL, AF_OBLIGATORY));    
    $this->add(new projectRelation("projects", "organization.contract_project", "contract_id", AF_HIDE_LIST));
        
    //The linkproject action is allowed by people who may edit contracts
    $this->addAllowedAction("linkproject");    
    
    //@todo translate all these attrs with translation tool, using module 'core'    
    $this->add(new atkDateAttribute("contract_date", "F d Y", "d F Y", 0, 0, AF_HIDE_LIST | AF_HIDE_ADD));        
    $this->add(new atkDummyAttribute("extrefnumhint",atktext("extrefnumhinttext","organization","contracts"), AF_HIDE_LIST | AF_HIDE_ADD));
    $this->add(new atkAttribute("extrefnum", AF_HIDE_LIST | AF_HIDE_ADD));
    $this->add(new atkNumberAttribute("price", AF_HIDE_LIST | AF_HIDE_ADD, 10, 2));
    $this->add(new atkListAttribute("pricepayed", array("no","yes"), array(0,1), AF_HIDE_LIST | AF_HIDE_ADD | AF_LIST_NO_NULL_ITEM));
    $this->add(new atkManyToOneRelation("editedby", "employee.employee", AF_HIDE_LIST | AF_HIDE_ADD | AF_LIST_NO_NULL_ITEM ));
    $this->add(new atkTextAttribute("comment", TEXT_LARGE, AF_HIDE_LIST | AF_HIDE_ADD));
    
    $this->setTable("contract","contract");
    $this->setOrder("startdate");
  }
    
  /**
   * Hack! Change display of attribute projects in edit action
   *
   * Add a select link right beside the 'Add project' link. Normally it would
   * only be possible to add the new link under the 'Add project' link because of the <br /> 
   * that is generated by the edit function of the atkOneToManyRelation.
   *
   * @param array record a record
   * @param string prefix the prefix for the record
   * @param string mode the mode
   * @return string html output of edit-function of atkManyToOneRelation with a brand new 'select' link
   */
  function projects_edit($record, $prefix="", $mode="")
  {  
  	$attr = &$this->getAttribute("projects");  
  	$result = $attr->edit($record, $prefix, $mode )	;		
  	$result = substr($result, 0, -6);										//Remove the '<br />' from the end
  		
  	$return_url = dispatch_url("organization.contracts", "linkproject", array("projectid"=>"[id]"));  	
 		$target_url = dispatch_url("organization.contract_projectselector", "select", array("atkfilter"=>"projectid=[id]","atktarget"=>atkurlencode($return_url)));	
 		$select = session_url($target_url,SESSION_NESTED);
  	  	
 		//Add link to result
    return $result." ".href($select,"selectandaddnewproject")."<br />";  	
  }
  
  function action_linkproject(&$handler)
 	{	
 		global $g_sessionManager;			//post values will be stored in this variable until overwritten with another value.
    
    if ($g_sessionManager->pageVar("projectid")!="" && $this->m_postvars["atkselector"] != "")
    {    	
      $record = $this->selectDb($this->m_postvars["atkselector"], "", "", "", array("id"));
      $contractid = $record[0]["id"];
    	
    	$db = &atkGetDb();
      $db->query("UPDATE project SET contract_id = $contractid WHERE project.id = ".$this->m_postvars["projectid"]);      
    } 		
    $this->redirect(session_url("", SESSION_BACK, 2));
 	}
		

	function adminFooter()
	{
	  $res = "" ;
	  if ($this->m_archive!=1)
	  {
	    return text("onlyactiverecordsareshown")." ".href('dispatch.php?atknodetype='.$this->atkNodeType().'&atkaction='.$this->m_action.
	                '&archive=1', text('clicktoviewarchive', $this->m_type, $this->m_module))."<br>";
	  }
	  else
	  {
	    return text("youareinthearchive")." ".href('dispatch.php?atknodetype='.$this->atkNodeType().'&atkaction='.$this->m_action.
	                '&archive=0', text('clicktoviewactiverecords', $this->m_type, $this->m_module))."<br>";
	  }
	  return $res."<br>";
	}

	function action_admin(&$handler)
	{
	  global $g_sessionManager;
	  $this->m_archive = $g_sessionManager->pageVar("archive");
	
	  if ($this->m_archive==1)
	  {
	    $this->addFilter("contract.status='archived'");
	  }
	  else
	  {
	    $this->addFilter("contract.status='active'");
	  }
	
	  return $handler->action_admin();
	}

  function period_price_edit($rec)
  {
    return $this->m_attribList["period_price"]->edit($rec)." ".atkconfig("currency_symbol");
  }

  function descriptor_def()
  {
    return "[description]";
  }

  function initial_values()
  {
  	
    return array("enddate"	=>	array("year"=>(date("Y")+1),	
    															"month"=>date("m"),		
    															"day"=>date("d")));
  }
}

?>