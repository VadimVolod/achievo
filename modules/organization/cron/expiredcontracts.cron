<?php

/**
 * Expired contracts cronjob script
 *
 * Checks for active expired contracts and updates its status to archived. 
 * It also updates any linked project and sets its status to non-active.
 *
 * @package achievo
 * @subpackage organization
 *
 * @author dennis <dennis@ibuildings.nl>
 *
 * @copyright (c) 2006 Ibuildings.nl BV
 * @license http://www.achievo.org/atk/licensing/ ATK open source license
 * @license http://www.gnu.org/copyleft/gpl.html GNU General Public License 2
 *
 * @version $Revision$
 * $Id$
 */

  /**
   * Mail a message that a contract and its projects have been altered     
   *
   * Mail a message to a user that a specified contract has expired 
   * and its status and the status of its linked projects have been altered.
   *
   * @param array contract one contract
   * @param array projects an array with projects
   * @param string newcontractstatus the status that the contract has been changed to
   * @param string newprojectstatus the status that the projects have been changed to
   * @param array mailto an array with mailadresses
   * @return nothing
   */
  function mailmessage($contract, $projects, $newcontractstatus, $newprojectstatus, $mailto)
	{	  
    $body = "The following contract has expired:\n\n";
    $body.= "id: ".$contract["id"]."\n";    
    $body.= "subject: ".$contract["subject"]."\n";
    $body.= "end date (d-m-y)".$contract['enddate']['day']."-".$contract['enddate']['month']."-".$contract['enddate']['year']."\n\n";
    $body.= "The status has been set to $newcontractstatus\n\n\n";
    
    if($projects != array())
    {
     $body.= "The following active projects were linked to this contract:\n\n";
     
     foreach ($projects as $project)
     {	       
       $body.= "Project id: ".$project["id"]."\n";
       $body.= "name: ".$project["name"]."\n\n";       
       $body.= "The status has been set to $newprojectstatus\n\n\n";
     }
    }
    else
      $body.= "There were no active projects linked to this contract.\n";    
    	    
    foreach($mailto as $mail)
		{
			echo "sending mail to : ".$mail."\n";			
			$to = $mail;
	  	$cc = "";
	  	usermail($to, "Contract expired", $body, $cc);
	  	echo "mail sent.\n";
		}	  
	}

	/**
	 * Get expired active contracts
	 *
	 * Retrieve the active contracts that have an enddate that has expired
	 *
	 * @param type name description
	 * @return type description
	 */
  function getActiveExpiredContracts($hascolumnandvalue)
  { 
    $dt = date("Y-m-d");
    $node = &getNode("organization.contracts");    
    $selector = "contract.enddate IS NOT NULL AND contract.enddate <> '' AND contract.enddate < '$dt' AND contract.status = 'active'";    
    
    if($hascolumnandvalue != array())   $selector.= " AND ".$hascolumnandvalue[0]." = '".$hascolumnandvalue[1]."'";
        
    return $node->selectDb($selector, "", "", "", array("id", "enddate", "status", "name", "subject"));    
  }
  
  /**
   * Get active projects that are linked to the specified contractid
   *
   * Retrieves the active projects that are linked to the specified contractid.
   *
   * @param int contractid id of contract
   * @return array projects
   */
  function getActiveLinkedProjects($contractid)
  { 
    $node = &getNode("organization.contract_project");
    $selector = "project.contract_id=$contractid AND project.status = 'active'";
    return $node->selectDb($selector, "", "", "", array("id", "contract_id", "status", "name"));        
  }
  
  
  /**
   * Main function      
   *
   * @param nothing
   * @return nothing
   */
  function main()
  {    
    echo "\nStarting cronjob: expiredcontracts.cron\n\n";
    
    //get nodes
    $node = &getNode("organization.contracts");
    $projectnode = &getNode("organization.contract_project");
      
    //get configurations
    $newcontractstatus  = atkConfig::get("organization", "organization_expiredcontracts_contracts_newstatus","archived");
    $newprojectstatus   = atkConfig::get("organization", "organization_expiredcontracts_projects_newstatus","nonactive");
    $mailto             = atkConfig::get("organization", "organization_expiredcontracts_mailto",array());
    $hascolumnandvalue  = atkConfig::get("organization", "organization_expiredcontracts_hascolumnandvalue",array());
    
    //get all active contracts that have an enddate and are expired.
    $expiredcontracts = getActiveExpiredContracts($hascolumnandvalue);            
       
    if(count($expiredcontracts) > 0)
    {      
      foreach ($expiredcontracts as $c)
      { 
        echo "contract ".$c["id"]."\n";        
        
        //get active linked projects
        $projects = getActiveLinkedProjects($c["id"]);
            
        if(count($projects) > 0)
        {           
          echo " ".count($projects)." linked active projects\n";
          foreach ($projects as $p)
          { 
            $p["status"] = $newprojectstatus;
            $projectnode->updateDb($p);            
          }
          
          if($mailto != array())  
            mailmessage($c, $projects, $newcontractstatus, $newprojectstatus, $mailto);
          
        }
        else 
          echo " no linked projects found!\n";
     
    	  $c["status"] = $newcontractstatus;
    	  
    	  // Update the record in the database
    	  $node->updateDb($c);          	      	  
      }      
    }
    else
      echo "No expiring contracts found!\n";
      
    
    
    echo("Finished cronjob: expiredcontracts.cron\n\n");
  }

  // Run the main function of this cronjob  
	main();
?>


